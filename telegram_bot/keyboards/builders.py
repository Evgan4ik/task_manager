from aiogram.utils.keyboard import InlineKeyboardBuilder


class TaskKeyboards:
    """–§–∞–±—Ä–∏–∫–∞ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∑–∞–¥–∞—á–∞–º–∏"""

    @staticmethod
    def tasks_list(tasks: list) -> InlineKeyboardBuilder:
        """
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–¥–∞—á
        :param tasks: –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ Task
        :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup
        """
        builder = InlineKeyboardBuilder()
        for task in tasks:
            if task:
                status = "‚úÖ" if task.is_completed else "üïí"
                builder.button(
                    text=f"{status} {task.title}",
                 callback_data=f"view_{task.id}"
                )
        builder.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")
        builder.adjust(1)
        return builder.as_markup()

    @staticmethod
    def task_actions(task_id: int) -> InlineKeyboardBuilder:
        """
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–µ–π
        :param task_id: ID –∑–∞–¥–∞—á–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup
        """
        builder = InlineKeyboardBuilder()
        builder.button(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_task_{task_id}")
        builder.button(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_{task_id}")
        builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="back")
        builder.adjust(2)
        return builder.as_markup()

    @staticmethod
    def edit_fields(task_id: int):
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
        :param task_id: ID —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–π –∑–∞–¥–∞—á–∏
        :return: InlineKeyboardMarkup
        """
        builder = InlineKeyboardBuilder()

        # –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è
        builder.button(text="üìù –ù–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit_title_{task_id}")
        builder.button(text="üìÑ –û–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"edit_desc_{task_id}")
        builder.button(text="üìÖ –î–µ–¥–ª–∞–π–Ω", callback_data=f"edit_deadline_{task_id}")
        builder.button(text="‚úÖ –°—Ç–∞—Ç—É—Å", callback_data=f"edit_status_{task_id}")
        builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="back")

        # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–æ —Ä—è–¥–∞–º (–ø–µ—Ä–≤—ã–µ 4 –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥—É)
        builder.adjust(2, 2, 1)

        return builder.as_markup()